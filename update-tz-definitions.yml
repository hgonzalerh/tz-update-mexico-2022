- name: Fix TZ configuration for America/Mexico_City and other Mexican TZ after 2022 changes 
  hosts: all
  become: true
  vars:
    tz_packages:
      '6':
        # These don't actually exist in the repos, but the names are here to extract the current name of the packages
        - tzdata-2023c-1.el6.noarch.rpm
        - tzdata-java-2023c-1.el6.noarch.rpm       
      '7':
        - tzdata-2023c-1.el7.noarch.rpm
        - tzdata-java-2023c-1.el7.noarch.rpm
      '8':
        - tzdata-2023c-1.el8.noarch.rpm
        - tzdata-java-2023c-1.el8.noarch.rpm
      '9':
        - tzdata-2023c-1.el9.noarch.rpm
        - tzdata-java-2023c-1.el9.noarch.rpm

  tasks:
    - name: Fail when OS is nor RHEL
      ansible.builtin.assert:
        that: ansible_distribution == 'RedHat'
    # Some RHEL does not have /etc/timezone, but only a link, this should be replace with stat
    # - name: Fail for any managed node not configured for America/Mexico_City
    #   ansible.builtin.command:
    #     cmd: grep America/Mexico_City /etc/timezone
    #   changed_when: false

    - name: Configure workaround for RHEL6 hosts that no longer have an update channel
      ansible.builtin.include_tasks:
        file: tasks/rhel6.yml
      when: ansible_distribution_major_version in ['6']
      loop: "{{ tz_packages[ansible_distribution_major_version] }}"

    - name: Update tzdata using regular channels or manual rpm file for pkg updates on RHEL> 6
      ansible.builtin.include_tasks:
        file: tasks/rhel789.yml
      when: ansible_distribution_major_version in ['7', '8' ,'9']
      loop: "{{ tz_packages[ansible_distribution_major_version] }}"
