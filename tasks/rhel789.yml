- name: Check for versions for each package
  block:
    - name: Simple test from Red Hat to see if machine needs updating
      # https://access.redhat.com/solutions/7003091
      ansible.builtin.command:
      # rpm -q <package short name from package file> 
        cmd: rpm -q {{ item.split('-')[:-2] | join('-') }}
      changed_when: false
      register: package_full_name

    - name: Fail if tzdata(-java) version is too low, repair below
      ansible.builtin.assert:
        that: package_full_name.stdout.split('-')[-2] >= '2022g'

  # If either old package or no package, transfer the rpm and update manually
  rescue:
    - name: Download tzdata package(s)
      ansible.builtin.get_url:
        url: "{{ package_repository }}/{{ item }}"
        dest: ./
        mode: '0644'
      delegate_to: localhost

    - name: Push the static package to the managed node
      ansible.builtin.copy:
        src: ./{{ item }}
        dest: .
        mode: '0644'

    - name: Install the actual packages from file, unconditionally
      # yum module would be ideal, but sanity of the YUM repositories is required
      # and we want to skip checking the repo structure, so we're using rpm unconditionally
      ansible.builtin.command:
        cmd: rpm -U --quiet ./{{ item }}
      register: _
      changed_when: ('already' not in _.stdout)
      # In normal operation, this command should succeed, all version checks have been performed
      # elsewhere in the playbook. So a fail is a fail.
      
            

